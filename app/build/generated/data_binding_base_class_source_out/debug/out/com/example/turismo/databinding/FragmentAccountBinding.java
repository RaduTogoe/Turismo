// Generated by view binder compiler. Do not edit!
package com.example.turismo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.turismo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAccountBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView accountInfoTextView;

  @NonNull
  public final EditText confirmPasswordField;

  @NonNull
  public final TextView confrmPasswordText;

  @NonNull
  public final Button deleteButton;

  @NonNull
  public final Button disconnectButton;

  @NonNull
  public final EditText emailField;

  @NonNull
  public final TextView emailText;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final EditText nameField;

  @NonNull
  public final EditText passwordField;

  @NonNull
  public final Button saveButton;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final TextView textView4;

  private FragmentAccountBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView accountInfoTextView, @NonNull EditText confirmPasswordField,
      @NonNull TextView confrmPasswordText, @NonNull Button deleteButton,
      @NonNull Button disconnectButton, @NonNull EditText emailField, @NonNull TextView emailText,
      @NonNull ImageView imageView, @NonNull ConstraintLayout main, @NonNull EditText nameField,
      @NonNull EditText passwordField, @NonNull Button saveButton, @NonNull TextView textView3,
      @NonNull TextView textView4) {
    this.rootView = rootView;
    this.accountInfoTextView = accountInfoTextView;
    this.confirmPasswordField = confirmPasswordField;
    this.confrmPasswordText = confrmPasswordText;
    this.deleteButton = deleteButton;
    this.disconnectButton = disconnectButton;
    this.emailField = emailField;
    this.emailText = emailText;
    this.imageView = imageView;
    this.main = main;
    this.nameField = nameField;
    this.passwordField = passwordField;
    this.saveButton = saveButton;
    this.textView3 = textView3;
    this.textView4 = textView4;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAccountBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAccountBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_account, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAccountBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.accountInfoTextView;
      TextView accountInfoTextView = ViewBindings.findChildViewById(rootView, id);
      if (accountInfoTextView == null) {
        break missingId;
      }

      id = R.id.confirmPasswordField;
      EditText confirmPasswordField = ViewBindings.findChildViewById(rootView, id);
      if (confirmPasswordField == null) {
        break missingId;
      }

      id = R.id.confrmPasswordText;
      TextView confrmPasswordText = ViewBindings.findChildViewById(rootView, id);
      if (confrmPasswordText == null) {
        break missingId;
      }

      id = R.id.deleteButton;
      Button deleteButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteButton == null) {
        break missingId;
      }

      id = R.id.disconnectButton;
      Button disconnectButton = ViewBindings.findChildViewById(rootView, id);
      if (disconnectButton == null) {
        break missingId;
      }

      id = R.id.emailField;
      EditText emailField = ViewBindings.findChildViewById(rootView, id);
      if (emailField == null) {
        break missingId;
      }

      id = R.id.emailText;
      TextView emailText = ViewBindings.findChildViewById(rootView, id);
      if (emailText == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.nameField;
      EditText nameField = ViewBindings.findChildViewById(rootView, id);
      if (nameField == null) {
        break missingId;
      }

      id = R.id.passwordField;
      EditText passwordField = ViewBindings.findChildViewById(rootView, id);
      if (passwordField == null) {
        break missingId;
      }

      id = R.id.saveButton;
      Button saveButton = ViewBindings.findChildViewById(rootView, id);
      if (saveButton == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.textView4;
      TextView textView4 = ViewBindings.findChildViewById(rootView, id);
      if (textView4 == null) {
        break missingId;
      }

      return new FragmentAccountBinding((ConstraintLayout) rootView, accountInfoTextView,
          confirmPasswordField, confrmPasswordText, deleteButton, disconnectButton, emailField,
          emailText, imageView, main, nameField, passwordField, saveButton, textView3, textView4);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
